#BlueJ class context
comment0.target=Core
comment0.text=\n\ Class\ Core,\ contem\ todas\ as\ funcoes\ necessarias\ para\ o\ projeto\n\n\ @author\ Claudia\ Marques\n\ @author\ Francisco\ Costa\n\ @author\ Mauricio\ Salgado\n\n
comment1.params=
comment1.target=Core()
comment1.text=\n\ Construtor\ vazio.\n
comment10.params=
comment10.target=void\ registarViatura()
comment11.params=
comment11.target=void\ associarViatura()
comment12.params=
comment12.target=void\ desassociarViatura()
comment13.params=
comment13.target=void\ removerViatura()
comment14.params=
comment14.target=void\ definicoesConta()
comment14.text=\n\ \ \ \ public\ void\ reportarCache()\ throws\ CacheNaoExisteException\ {\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ 100;\ i++)\ out.println();\n\ \ \ \ \ \ \ \ String\ codigo2,\ motivo;\n\n\ \ \ \ \ \ \ \ out.println("-----------GeocachingPOO\:\ Report\ abuse---------");\n\ \ \ \ \ \ \ \ out.print("Introduza\ o\ codigo\ da\ cache\ a\ reportar\:\ ");\n\ \ \ \ \ \ \ \ codigo2\ \=\ input.next();\n\n\ \ \ \ \ \ \ \ if(caches.get(codigo2)\=\=null)\ throw\ new\ CacheNaoExisteException();\n\ \ \ \ \ \ \ \ else{\n\ \ \ \ \ \ \ \ \ \ \ \ out.print("Introduza\ o\ motivo\ do\ report\:\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ motivo\ \=\ input.next();\n\n\ \ \ \ \ \ \ \ \ \ \ \ caches.get(codigo2).setReportMotive(motivo);\n\ \ \ \ \ \ \ \ \ \ \ \ reportedCaches.put(codigo2,\ caches.get(codigo2));\n\ \ \ \ \ \ \ \ \ \ \ \ out.println("Reportado\ com\ sucesso\!");\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\n\n\ \ \ \ public\ void\ consultaAtividades()\ throws\ UtilizadorNaoExisteException,\ \ AtividadeNullException\ {\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ 100;\ i++)\ out.println();\n\ \ \ \ \ \ \ \ String\ user;\n\ \ \ \ \ \ \ \ int\ i\ \=\ 0;\n\n\ \ \ \ \ \ \ \ out.println("-----------GeocachingPOO\:\ Consulta\ de\ atividades---------");\n\ \ \ \ \ \ \ \ out.print("Email\ do\ utilizador\ a\ consultar\:\ ");\n\ \ \ \ \ \ \ \ user\ \=\ input.next();\n\n\ \ \ \ \ \ \ \ if\ (utilizadores.containsKey(user))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Utilizador\ userTemp\ \=\ utilizadores.get(user);\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (userTemp.getAtividades().size()\ \=\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ AtividadeNullException();\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (GregorianCalendar\ entry\ \:\ userTemp.getAtividades().descendingKeySet())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (i\ <\ 10)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("Cache\ n\u00BA"+\ (userTemp.getAtividades().size()\ -\ i));\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tTipo\ Cache\:\ "\ +\ userTemp.getAtividades().get(entry).getTipo());\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tC\u00F3digo\ Cache\:\ "\ +\ userTemp.getAtividades().get(entry).getCodigo());\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tDescoberta\ em\:\ "\ +\ entry.get(Calendar.DAY_OF_MONTH)\ +\ "/"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ entry.get(Calendar.MONTH)\ +\ "/"\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ +\ entry.get(Calendar.YEAR)\ +\ "\\n");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }else\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ UtilizadorNaoExisteException();\n\ \ \ \ }\n\n\ \ \ \ /**\n\ A\ fun\u00E7\u00E3o\ estatisticasUser\ verifica\ as\ estat\u00EDsticas\ referentes\ a\ um\ Utilizador.\n\n\ \ \ \ public\ void\ estatisticasUser()\ throws\ UtilizadorNaoExisteException,AtividadeNullException,DataInvalidaException{\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ 100;\ i++)\ out.println();\n\ \ \ \ \ \ \ \ String\ User;\n\ \ \ \ \ \ \ \ int\ viagens;\n\ \ \ \ \ \ \ \ int\ anoPesquisa,\ mesPesquisa\ \=\ 0;\n\n\ \ \ \ \ \ \ \ out.println("-----------GeocachingPOO\:\ Estatisticas---------");\n\ \ \ \ \ \ \ \ out.print("Introduza\ o\ email\ do\ utilizador\ que\ pretender\ verificar\:\ ");\n\ \ \ \ \ \ \ \ User\ \=\ input.next();\n\n\ \ \ \ \ \ \ \ if\ (utilizadores.containsKey(User))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ Utilizador\ UserTemp\ \=\ utilizadores.get(User);\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (UserTemp.getAtividades().size()\ \=\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ AtividadeNullException();\n\ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.print("Introduza\ o\ ano\ que\ pretende\ verificar\ (0\ ->\ estatisticas\ globais)\:\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ anoPesquisa\ \=\ input.nextInt();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (String.valueOf(anoPesquisa).length()\ \!\=\ 4\ &&\ anoPesquisa\!\=0)\ throw\ new\ DataInvalidaException();\n\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (anoPesquisa\ \!\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.print("Introduza\ o\ m\u00EAs\ que\ pretende\ verificar\ (0\ ->\ todos\ os\ meses\ desse\ ano)\:\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ mesPesquisa\ \=\ input.nextInt();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(mesPesquisa<0\ ||\ mesPesquisa>12\ )\ throw\ new\ DataInvalidaException();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (anoPesquisa\ \=\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (Map.Entry<GregorianCalendar,\ Cache>\ cach\ \:\ UserTemp.getAtividades().entrySet())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Normal"))\ normal++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Micro\ Cache"))\ micro++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Evento"))evento++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Misterio"))\ misterio++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Virtual"))virtual++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Multi\ Cache"))multi++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (String.valueOf(anoPesquisa).length()\ \=\=\ 4\ &&\ mesPesquisa\ >\=\ 1\ &&\ mesPesquisa\ <\=\ 12)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (Map.Entry<GregorianCalendar,\ Cache>\ cach\ \:\ UserTemp.getAtividades().entrySet())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Normal")\ &&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)\ normal++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Micro\ Cache")\ &&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)\ micro++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Evento")&&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)evento++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Misterio")\ &&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)\ misterio++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Virtual")\ &&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)\ virtual++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Multi\ Cache")\ &&\ cach.getKey().get(Calendar.MONTH)\ \=\=\ mesPesquisa&&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)multi++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ if\ (String.valueOf(anoPesquisa).length()\ \=\=\ 4\ &&\ mesPesquisa\ \=\=\ 0)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for\ (Map.Entry<GregorianCalendar,\ Cache>\ cach\ \:\ UserTemp.getAtividades().entrySet())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Normal")\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)normal++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Micro\ Cache")\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)micro++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Evento")\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)evento++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Misterio")\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)misterio++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Cache\ Virtual")\ &&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)virtual++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if\ (cach.getValue().getTipo().equals("Multi\ Cache")&&\ cach.getKey().get(Calendar.YEAR)\ \=\=\ anoPesquisa)multi++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("-------------------------");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("O\ utilizador\ encontrou\ o\ seguinte\ numero\ de\ caches\ nesse\ dado\ periodo\:");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tCache\ Normal\:\ "\ +\ normal);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tMicro\ Cache\:\ "\ +\ micro);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tCache\ Evento\:\ "\ +\ evento);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tCache\ Misterio\:\ "\ +\ misterio);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tCache\ Virtual\:\ "\ +\ virtual);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\tMulti\ Cache\:\ "\ +\ multi);\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("\\nPara\ um\ total\ de\ "\ +\ UserTemp.getPontuacao()\ +\ "\ pontos");\n\ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ }\ else\ {\n\ \ \ \ \ \ \ \ \ \ \ \ throw\ new\ UtilizadorNaoExisteException();\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n\n\ \ \ \ /**\n\ A\ fun\u00E7\u00E3o\ definicoesConta\ permite\ alterar\ as\ defini\u00E7\u00F5es\ da\ conta\ de\ um\ Utilizador.\n
comment15.params=
comment15.target=boolean\ removeUser()
comment15.text=\n\ A\ fun\u00E7\u00E3o\ removeUser\ permite\ ao\ Utilizador\ decidir\ se\ quer\ ou\ n\u00E3o\ remover\ a\ sua\ conta.\n
comment16.params=
comment16.target=boolean\ isDriver()
comment17.params=
comment17.target=boolean\ isAdmin()
comment2.params=
comment2.target=Cliente\ getCurrentUser()
comment2.text=\n\ A\ fun\u00E7\u00E3o\ getCurrentUser\ devolve\ um\ Utilizador.\n
comment3.params=
comment3.target=Motorista\ getCurrentDriver()
comment4.params=
comment4.target=void\ registarUser()
comment4.text=\n\ A\ fun\u00E7\u00E3o\ registarUser\ regista\ um\ Utilizador.\n
comment5.params=
comment5.target=void\ registarDriver()
comment6.params=
comment6.target=int\ login()
comment6.text=\n\ A\ fun\u00E7\u00E3o\ login\ faz\ o\ login\ de\ um\ Utilizador.\n
comment7.params=
comment7.target=void\ fazerViagem()
comment8.params=
comment8.target=void\ historicoViagens()
comment9.params=
comment9.target=void\ alterarEstado()
comment9.text=\n\ \ \ \ public\ void\ consultarEstatisticas()\ throws\ ViaturaNaoExisteException,\ SelecaoInvalidaException{\n\ \ \ \ \ \ \ \ int\ opcao;\n\ \ \ \ \ \ \ \ double\ km\ \=\ 0;\n\ \ \ \ \ \ \ \ String\ cliente;\n\ \ \ \ \ \ \ \ String\ motorista;\n\ \ \ \ \ \ \ \ out.println("----------UMer\:\ Estat\u00EDsticas\ --------");\n\ \ \ \ \ \ \ \ out.println("1\ -\ Melhor\ Motorista");\n\ \ \ \ \ \ \ \ out.println("2\ -\ Melhor\ Cliente");\n\ \ \ \ \ \ \ \ out.println("3\ -\ Viatura\ com\ mais\ km");\n\ \ \ \ \ \ \ \ out.println("4\ -\ Top\ 10\ utilizadores");\n\ \ \ \ \ \ \ \ out.println("5\ -\ Fatura\u00E7\u00E3o\ Viatura");\n\ \ \ \ \ \ \ \ opcao\ \=\ input.nextInt();\n\ \ \ \ \ \ \ \ switch(opcao)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 1\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ double\ max\ \=\ 0;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(Cliente\ c\ \:\ utilizadores.values()){\ \n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ (if(c\ instanceof\ Motorista)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(c.getKm()>max)\ {max\=c.getKm();motorista\=c.getEmail();}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("O\ melhor\ motorista\ \u00E9\ o\ "\ +\ motorista\ +\ "com\ um\ total\ de\ "\ +\ max\ +\ "kms\!");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 2\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(Cliente\ c\ \:\ utilizadores.values()){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(c.getGasto()>max)\ {max\=c.getGasto;\ cliente\ \=\ c.getEmail();}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("O\ melhor\ cliente\ \u00E9\ o\ "\ +\ cliente\ +\ "com\ um\ total\ de\ "\ +\ max\ +\ "euros\ gasto\!");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 3\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String\ viatura\ \=\ viaturas.first().getId();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ km\ \=\ viaturas.first().getKm();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("A\ viatura\ com\ mais\ km\ \u00E9\ a\ vitura\ com\ id\:\ "\ +\ viatura\ +\ "com\ um\ total\ de\ "\ +\ km\ +\ "kms\!");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 4\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ int\ i\ \=\ 1;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(Cliente\ c\ \:\ utilizadores.values()){\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(i<11)\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println(i\ +\ ".\ O\ utilizador"\ +\ c.getEmail()\ +\ "com\ um\ gasto\ de\ "\ +\ c.getGasto\ +\ "euros");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ i++;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ \ \ \ \ case\ 5\:\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ String\ viatura5;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ double\ valor;\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.print("Introduza\ o\ identificador\ da\ viatura\:\ ");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ viatura5\ \=\ input.next();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(viaturas.containsKey(viatura))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ for(Viagem\ v\ \:\ viagens.values())\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ if(v.getViatura().equals(viatura5))\ {\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ valor\ +\=\ v.getPreco();\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ out.println("A\ viatura"\ +\ viatura\ +\ "faturou"\ +\ valor\ +\ "euros\!");\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ }\ else\ {throw\ new\ V\ iaturaNaoExisteException();\ break;}\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ break;\n\ \ \ \ \ \ \ \ }\n\ \ \ \ }\n
numComments=18
